version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/db.sqlite3:/app/db.sqlite3
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - SERPAPI_KEY=${SERPAPI_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - shopping-comparator
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
      - VITE_WS_BASE_URL=${VITE_WS_BASE_URL}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - shopping-comparator
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.25"
        reservations:
          memory: 128M
          cpus: "0.1"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - shopping-comparator
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.2"
        reservations:
          memory: 64M
          cpus: "0.1"

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    command: celery -A backend worker --loglevel=info --concurrency=2
    volumes:
      - ./backend:/app
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - SERPAPI_KEY=${SERPAPI_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - shopping-comparator
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.25"
        reservations:
          memory: 128M
          cpus: "0.1"

volumes:
  redis_data:
    driver: local

networks:
  shopping-comparator:
    driver: bridge
